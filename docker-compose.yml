services:
  api_gateway:
    container_name: api_gateway
    build: ./api_gateway
    ports:
      - "3000:3000"
    environment:
      - URL_SERVICE_USER=${URL_SERVICE_USER}
      - URL_SERVICE_DOCTOR=${URL_SERVICE_DOCTOR}
    networks:
      - backend
  service_user:
    container_name: service_user
    build: ./service_user
    ports:
      - "4000:4000"
    environment:
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DATABASE_URL=${DATABASE_URL}
    networks:
      - backend
  service_doctor:
    container_name: service_doctor
    build: ./service_doctor
    ports:
      - "6000:6000"
    environment:
      - DB_NAME=${DB_NAME}
      - DB_HOST=${DB_HOST}
      - DB_USERNAME=${DB_USERNAME}
      - DB_PASSWORD=${DB_PASSWORD}
      - DATABASE_URL=${DATABASE_URL}
    networks:
      - backend
  mysql:
    container_name: db
    image: mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: password
    networks:
      - backend
  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - "8081:8080"
    networks:
      - backend

networks:
  backend:
    driver: bridge
